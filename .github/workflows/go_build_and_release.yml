name: Go build and create release

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Go build and create release
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build Go binaries with Makefile
      id: build_binaries
      run: | 
        git fetch --all
        make build-new-version
    
    - name: Create info for the new release
      id: release_info
      run: |
        git fetch --all
        
        changelog=$(./.build/release-log-linux-amd64 changelog)
        new_version=$(./.build/release-log-linux-amd64 new-version)
        title=$(./.build/release-log-linux-amd64 title)
        
        changelog="${changelog//'%'/'%25'}"
        changelog="${changelog//$'\n'/'%0A'}"
        changelog="${changelog//$'\r'/'%0D'}"
        
        echo ::set-output name=new_version::$new_version
        echo ::set-output name=changelog::$changelog
        echo ::set-output name=title::$title
   
    - name: Create a new release
      id: create_release
      uses: actions/create-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_info.outputs.new_version }}
        release_name: ${{ steps.release_info.outputs.title }}
        body: |
          ${{ steps.release_info.outputs.changelog }}
          
    - name: Upload release asset binary release-log-darwin-386
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./.build/release-log-darwin-386
        asset_name: release-log-darwin-386
        asset_content_type: application/binary

    - name: Upload release asset binary release-log-darwin-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./.build/release-log-darwin-amd64
        asset_name: release-log-darwin-amd64
        asset_content_type: application/binary
      
    - name: Upload release asset binary release-log-linux-386
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./.build/release-log-linux-386
        asset_name: release-log-linux-386
        asset_content_type: application/binary
    
    - name: Upload release asset binary release-log-linux-amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./.build/release-log-linux-amd64
        asset_name: release-log-linux-amd64
        asset_content_type: application/binary

    - name: Upload release asset binary release-log-linux-arm
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./.build/release-log-linux-arm
        asset_name: release-log-linux-arm
        asset_content_type: application/binary

    - name: Upload release asset binary release-log-linux-arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./.build/release-log-linux-arm64
        asset_name: release-log-linux-arm64
        asset_content_type: application/binary
